#!/usr/bin/env perl

use Mojo::Base -strict;

use Mandyville::Competitions;
use Mandyville::Countries;
use Mandyville::Database;
use Mandyville::Players;
use Mandyville::Fixtures;
use Mandyville::Teams;
use Mandyville::Utils qw(current_season debug msg);

use Const::Fast;
use SQL::Abstract::More;

const my $COMPS => [190, 201, 210, 225, 259, 269];

my $db   = Mandyville::Database->new;
my $sqla = SQL::Abstract::More->new;

my $fapi = Mandyville::API::FootballData->new;
my $uapi = Mandyville::API::Understat->new;

my $countries = Mandyville::Countries->new({
    dbh  => $db->rw_db_handle(),
    sqla => $sqla,
});

my $comps = Mandyville::Competitions->new({
    api       => $fapi,
    countries => $countries,
    dbh       => $db->rw_db_handle(),
    sqla      => $sqla,
});

my $teams = Mandyville::Teams->new({
    dbh  => $db->rw_db_handle(),
    sqla => $sqla,
});

my $fixtures = Mandyville::Fixtures->new({
    dbh   => $db->rw_db_handle(),
    sqla  => $sqla,
    teams => $teams,
});

my $players = Mandyville::Players->new({
    fapi      => $fapi,
    uapi      => $uapi,
    comps     => $comps,
    countries => $countries,
    fixtures  => $fixtures,
    dbh       => $db->rw_db_handle(),
    sqla      => $sqla,
});

my $missing_players =
    $players->get_without_understat_data(current_season(), $COMPS);

msg scalar @$missing_players . ' players to fetch';

my $seen_fixtures = {};

foreach my $player (@$missing_players) {
    my $id = $player->{id};

    msg "Fetching for player #$id";

    my $match_data = $uapi->player($player->{understat_id});

    foreach my $match_info (@$match_data) {
        my $fixture_id =
            $fixtures->find_fixture_from_understat_data($match_info, $COMPS);

        next if !defined $fixture_id;

        my $team_id = $players->get_team_for_player_fixture($id, $fixture_id);

        if (!defined $team_id) {
            debug 'Skipping match with missing info';
            next;
        }

        $players->update_understat_fixture_info(
            $id, $fixture_id, $team_id, $match_info);

        next if defined $seen_fixtures->{"$fixture_id-$team_id"};

        my $match_data = $uapi->match($match_info->{id});

        my $team_performance = {};

        if ($fixtures->is_at_home($fixture_id, $team_id)) {
            $team_performance->{deep_passes}     = $match_data->{h_deep};
            $team_performance->{draw_chance}     = $match_data->{h_d};
            $team_performance->{ppda}            = $match_data->{h_ppda};
            $team_performance->{loss_chance}     = $match_data->{h_l};
            $team_performance->{shots}           = $match_data->{h_shot};
            $team_performance->{shots_on_target} = $match_data->{h_shotOnTarget};
            $team_performance->{win_chance}      = $match_data->{h_w};
            $team_performance->{xg}              = $match_data->{h_xg};
        } else {
            $team_performance->{deep_passes}     = $match_data->{a_deep};
            $team_performance->{draw_chance}     = $match_data->{h_d};
            $team_performance->{ppda}            = $match_data->{a_ppda};
            $team_performance->{loss_chance}     = $match_data->{h_w};
            $team_performance->{shots}           = $match_data->{a_shot};
            $team_performance->{shots_on_target} = $match_data->{a_shotOnTarget};
            $team_performance->{win_chance}      = $match_data->{h_l};
            $team_performance->{xg}              = $match_data->{a_xg};
        }

        $fixtures->process_understat_fixture_data(
            $fixture_id, $team_id, $team_performance
        );

        $seen_fixtures->{"$fixture_id-$team_id"} = 1;
    }
}

msg "Done";

=head1 NAME

  update-understat-info

=head1 DESCRIPTION

  Fetches the understat match info for all players with known understat
  IDs and no understat match data, and stores it.

=cut

